package psa.smt.test;

import psa.smt.decomposer.ForwardBackwardSubstitutor;
import psa.smt.entity.MatrixSkyLine;

public class TestRealStiffnessMat {
	public static void main(String[] args) {
		MatrixSkyLine matB = new MatrixSkyLine(new double[][]{
				   { 5271274.211123592, 0.0, 0.0, 0.0, -235637.1055617959, 329891.94778651424, -235637.1055617959, -329891.94778651424},
				   {0.0, 1352268.8823736683, 0.0, -428571.42857142864, 329891.94778651424, -461848.72690111987, -329891.94778651424, -461848.72690111987},
				   {0.0, 0.0, 2827645.2667415505, 0.0, -1413822.6333707753, -1979351.686719085, -1413822.6333707753, 1979351.686719085},
				   {0.0, -428571.42857142864, 0.0, 5970756.151384866, -1979351.686719085, -2771092.361406719, 1979351.686719085, -2771092.361406719},
				   {-235637.1055617959, 329891.94778651424, -1413822.6333707753, -1979351.686719085, 3063282.3723033466, 3628811.425651656, 0.0, 0.0},
				   {329891.94778651424, -461848.72690111987, -1979351.686719085, -2771092.361406719, 3628811.425651656, 6004033.449714557, 0.0, 0.0},
				   {-235637.1055617959, -329891.94778651424, -1413822.6333707753, 1979351.686719085, 0.0, 0.0, 3063282.3723033466, -3628811.425651656},
				   {-329891.94778651424, -461848.72690111987, 1979351.686719085, -2771092.361406719, 0.0, 0.0, -3628811.425651656, 6004033.449714557},
				});
		
		MatrixSkyLine decomposeByCholesky = matB.decomposeByCholesky();
		System.out.println(decomposeByCholesky.getLowerTraingularMatrix());
		
		double[] bVect = new double[]{
				-2.0833333333333306E-5,
		3.5192746308575977E-4,
		-1.7682557493365405E-4,
		2.5260796419093494E-5,
		-5.220042532271792E-4,
		2.9707779161927634E-4,
		1.828848850132689E-4,
		2.0641444998104391E-4};
		
		ForwardBackwardSubstitutor substitutor = new ForwardBackwardSubstitutor(decomposeByCholesky, bVect);
		double[] solve = substitutor.solve();
		for (int i = 0; i < solve.length; i++) {
			System.out.print(solve[i]+" , ");
		}
	}
}
